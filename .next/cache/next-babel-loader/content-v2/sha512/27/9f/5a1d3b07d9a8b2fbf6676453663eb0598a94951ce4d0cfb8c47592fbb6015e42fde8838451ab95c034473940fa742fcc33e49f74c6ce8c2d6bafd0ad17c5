{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ranja\\\\Downloads\\\\autify-assessment\\\\pages\\\\[repoId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport RepoDetail from \"../../components/repositories/RepoDetail\";\nimport Head from 'next/head';\n\nfunction RepoDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RepoDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = RepoDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepoDetails\");","map":{"version":3,"sources":["C:/Users/ranja/Downloads/autify-assessment/pages/[repoId]/index.js"],"names":["Fragment","RepoDetail","Head","RepoDetails","props","meetupData","title","description","image","address","MeetupDetails"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACvB,sBACI,QAAC,QAAD;AAAA,4BACA,QAAC,IAAD;AAAA,8BACA;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AACA,QAAA,IAAI,EAAC,aADL;AAEA,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAF1B;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAQA,QAAC,UAAD;AACA,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADxB;AAEA,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFxB;AAGA,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH1B;AAIA,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ9B;AAAA;AAAA;AAAA;AAAA,YARA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;KAlBQJ,W;;AAuDT,eAAeO,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport RepoDetail from \"../../components/repositories/RepoDetail\";\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport Head from 'next/head';\r\nfunction RepoDetails(props){\r\n    return(\r\n        <Fragment>\r\n        <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta \r\n        name=\"description\"\r\n        content={props.meetupData.description}\r\n        /> \r\n        </Head>\r\n        <RepoDetail \r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n        />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://ranjanmanish:91101265020m@cluster0.xlizp.mongodb.net/autify?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n    client.close();\r\n    return {\r\n        fallback: 'blocking',\r\n        paths: meetups.map((meetup)=>({\r\n        params:{ meetupId: meetup._id.toString() } })),\r\n\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context){\r\n    //fetch data for a single meetup\r\n const meetupId = context.params.meetupId;\r\n const client = await MongoClient.connect('mongodb+srv://ranjanmanish:91101265020m@cluster0.xlizp.mongodb.net/autify?retryWrites=true&w=majority');\r\n const db = client.db();\r\n const meetupsCollection = db.collection('meetups');\r\n const selectedMeetup = await meetupsCollection.findOne({_id: new ObjectId(meetupId)});\r\n client.close();\r\n    return {\r\n        props:{\r\n            meetupData: {\r\n                _id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                description: selectedMeetup.description\r\n            },\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}