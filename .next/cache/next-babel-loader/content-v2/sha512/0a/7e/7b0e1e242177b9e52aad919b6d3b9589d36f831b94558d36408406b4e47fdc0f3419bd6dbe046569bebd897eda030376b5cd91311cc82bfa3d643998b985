{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ranja\\\\Downloads\\\\autify-assessment\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://pngimg.com/uploads/github/github_PNG28.png\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://ranjanmanish:91101265020m@cluster0.xlizp.mongodb.net/autify?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        image: 'https://pngimg.com/uploads/github/github_PNG28.png',\n        id: meetupId,\n        title: 'First Meetup',\n        address: 'Some Street 5, Some City',\n        description: 'This is a first meetup'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/ranja/Downloads/autify-assessment/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,SAASC,aAAT,GAAwB;AACpB,sBACI,QAAC,YAAD;AACA,IAAA,KAAK,EAAC,oDADN;AAEA,IAAA,KAAK,EAAC,cAFN;AAGA,IAAA,OAAO,EAAC,0BAHR;AAIA,IAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAW;AAC9BC,MAAAA,MAAM,EAAC;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADuB,KAAX,CAAZ;AAFJ,GAAP;AAKH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AACzC;AACH,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACG,SAAO;AACHI,IAAAA,KAAK,EAAC;AACFC,MAAAA,UAAU,EAAC;AACPC,QAAAA,KAAK,EAAE,oDADA;AAEPC,QAAAA,EAAE,EAAEP,QAFG;AAGPQ,QAAAA,KAAK,EAAE,cAHA;AAIPC,QAAAA,OAAO,EAAE,0BAJF;AAKPC,QAAAA,WAAW,EAAE;AALN;AADT;AADH,GAAP;AAWH;AAED,eAAe1B,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {MongoClient} from 'mongodb';\r\n\r\nfunction MeetupDetails(){\r\n    return(\r\n        <MeetupDetail \r\n        image=\"https://pngimg.com/uploads/github/github_PNG28.png\"\r\n        title=\"First Meetup\"\r\n        address=\"Some Street 5, Some City\"\r\n        description=\"This is a first meetup\"\r\n        />\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://ranjanmanish:91101265020m@cluster0.xlizp.mongodb.net/autify?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map((meetup)=>({\r\n        params:{ meetupId: meetup._id.toString() } }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context){\r\n    //fetch data for a single meetup\r\n const meetupId = context.params.meetupId;\r\n    return {\r\n        props:{\r\n            meetupData:{\r\n                image: 'https://pngimg.com/uploads/github/github_PNG28.png',\r\n                id: meetupId,\r\n                title: 'First Meetup',\r\n                address: 'Some Street 5, Some City',\r\n                description: 'This is a first meetup'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}